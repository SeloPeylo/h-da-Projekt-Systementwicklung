<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram>
            <Box name="Timeline" id="1" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="204" y="94">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="10" start_frame="1" end_frame="122" size="122">
                <BehaviorLayer name="eyes_white">
                  <BehaviorKeyframe name="keyframe119" index="119">
                    <Diagram>
                      <Box name="Eye LEDs" id="5" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="230" y="80">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                </Box>
                                <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 255, 255])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <color>#ffffff</color>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                  <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                </Box>
                                <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="2" value="-10.125" />
                    <Key frame="15" value="21.7" />
                    <Key frame="18" value="21.7" />
                    <Key frame="23" value="-30.292" />
                    <Key frame="31" value="-30.0029" />
                    <Key frame="39" value="-30.292" />
                    <Key frame="47" value="-30.0029" />
                    <Key frame="55" value="-30.292" />
                    <Key frame="63" value="-30.0029" />
                    <Key frame="97" value="-10.125" />
                    <Key frame="118" value="-9.70465" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="2" value="0.262075" />
                    <Key frame="15" value="0.262075" />
                    <Key frame="18" value="0.262075" />
                    <Key frame="23" value="0.262075" />
                    <Key frame="31" value="0" />
                    <Key frame="39" value="0.262075" />
                    <Key frame="47" value="0" />
                    <Key frame="55" value="0.262075" />
                    <Key frame="63" value="0" />
                    <Key frame="97" value="0.262075" />
                    <Key frame="118" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="2" value="4.1453" />
                    <Key frame="15" value="-19.5487" />
                    <Key frame="18" value="-19.5487" />
                    <Key frame="23" value="2.88689" />
                    <Key frame="31" value="3.20597" />
                    <Key frame="39" value="2.88689" />
                    <Key frame="47" value="3.20597" />
                    <Key frame="55" value="2.88689" />
                    <Key frame="63" value="3.20597" />
                    <Key frame="97" value="3.47224" />
                    <Key frame="118" value="4.50378" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="2" value="-5.80034" />
                    <Key frame="15" value="-1.21657" />
                    <Key frame="18" value="-1.21657" />
                    <Key frame="23" value="-4.6685" />
                    <Key frame="31" value="-4.71714" />
                    <Key frame="39" value="-4.6685" />
                    <Key frame="47" value="-4.71714" />
                    <Key frame="55" value="-4.6685" />
                    <Key frame="63" value="-4.71714" />
                    <Key frame="97" value="-5.39736" />
                    <Key frame="118" value="-6.05879" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="2" value="-24.5382" />
                    <Key frame="15" value="-80.2338" />
                    <Key frame="18" value="-80.2338" />
                    <Key frame="23" value="-82.2" />
                    <Key frame="31" value="-82.1128" />
                    <Key frame="39" value="-82.1128" />
                    <Key frame="47" value="-81.6138" />
                    <Key frame="55" value="-81.6138" />
                    <Key frame="63" value="-81.6138" />
                    <Key frame="97" value="-79.2122" />
                    <Key frame="118" value="-24.122" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="2" value="-69.1117" />
                    <Key frame="15" value="-53.4757" />
                    <Key frame="18" value="-53.4757" />
                    <Key frame="23" value="-52.5" />
                    <Key frame="31" value="-53.0532" />
                    <Key frame="39" value="-53.0532" />
                    <Key frame="47" value="-52.6296" />
                    <Key frame="55" value="-52.6296" />
                    <Key frame="63" value="-52.6296" />
                    <Key frame="97" value="-112.235" />
                    <Key frame="118" value="-68.349" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="2" value="0.293066" />
                    <Key frame="15" value="0.268157" />
                    <Key frame="18" value="0.268157" />
                    <Key frame="23" value="0.02" />
                    <Key frame="31" value="0.021945" />
                    <Key frame="39" value="0.021945" />
                    <Key frame="47" value="0.0206091" />
                    <Key frame="55" value="0.0206091" />
                    <Key frame="63" value="0.0206091" />
                    <Key frame="97" value="0.0227137" />
                    <Key frame="118" value="0.297914" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="2" value="6.45879" />
                    <Key frame="15" value="-25.0633" />
                    <Key frame="18" value="-25.0633" />
                    <Key frame="23" value="4.56322" />
                    <Key frame="31" value="8.93827" />
                    <Key frame="39" value="4.56322" />
                    <Key frame="47" value="8.93827" />
                    <Key frame="55" value="4.56322" />
                    <Key frame="63" value="8.93827" />
                    <Key frame="97" value="5.15366" />
                    <Key frame="118" value="6.76084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="2" value="5.98232" />
                    <Key frame="15" value="1.26323" />
                    <Key frame="18" value="1.26323" />
                    <Key frame="23" value="4.84534" />
                    <Key frame="31" value="4.85423" />
                    <Key frame="39" value="4.84534" />
                    <Key frame="47" value="4.85423" />
                    <Key frame="55" value="4.84534" />
                    <Key frame="63" value="4.85423" />
                    <Key frame="97" value="5.46648" />
                    <Key frame="118" value="6.32766" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="2" value="-9.64272" />
                    <Key frame="15" value="-0.708047" />
                    <Key frame="18" value="-0.708047" />
                    <Key frame="23" value="-9.49937" />
                    <Key frame="31" value="-9.39659" />
                    <Key frame="39" value="-9.49937" />
                    <Key frame="47" value="-9.39659" />
                    <Key frame="55" value="-9.49937" />
                    <Key frame="63" value="-9.39659" />
                    <Key frame="97" value="-9.47662" />
                    <Key frame="118" value="-9.9404" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="2" value="-4.76039" />
                    <Key frame="15" value="38.9812" />
                    <Key frame="18" value="38.9812" />
                    <Key frame="23" value="-2.68454" />
                    <Key frame="31" value="-2.68454" />
                    <Key frame="39" value="-2.68454" />
                    <Key frame="47" value="-2.68454" />
                    <Key frame="55" value="-2.68454" />
                    <Key frame="63" value="-2.68454" />
                    <Key frame="97" value="-3.16282" />
                    <Key frame="118" value="-4.99935" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="2" value="80.7988" />
                    <Key frame="15" value="-21.4776" />
                    <Key frame="18" value="-21.4776" />
                    <Key frame="23" value="57.1484" />
                    <Key frame="31" value="61.7987" />
                    <Key frame="39" value="57.6834" />
                    <Key frame="47" value="62.019" />
                    <Key frame="55" value="57.2884" />
                    <Key frame="63" value="62.0511" />
                    <Key frame="97" value="75.7238" />
                    <Key frame="118" value="82.4145" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="2" value="13.7062" />
                    <Key frame="15" value="8.16145" />
                    <Key frame="18" value="8.16145" />
                    <Key frame="23" value="13.9" />
                    <Key frame="31" value="17.835" />
                    <Key frame="39" value="19.1302" />
                    <Key frame="47" value="22.476" />
                    <Key frame="55" value="23.9758" />
                    <Key frame="63" value="26.7795" />
                    <Key frame="97" value="20.153" />
                    <Key frame="118" value="12.576" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="2" value="5.31278" />
                    <Key frame="15" value="0.956292" />
                    <Key frame="18" value="0.956292" />
                    <Key frame="23" value="-49.3" />
                    <Key frame="31" value="-52.2094" />
                    <Key frame="39" value="-50.0041" />
                    <Key frame="47" value="-51.8942" />
                    <Key frame="55" value="-49.4373" />
                    <Key frame="63" value="-49.059" />
                    <Key frame="97" value="-49.3132" />
                    <Key frame="118" value="5.74109" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="2" value="4.10432" />
                    <Key frame="15" value="-19.5492" />
                    <Key frame="18" value="-19.5492" />
                    <Key frame="23" value="2.86113" />
                    <Key frame="31" value="3.22329" />
                    <Key frame="39" value="2.86113" />
                    <Key frame="47" value="3.22329" />
                    <Key frame="55" value="2.86113" />
                    <Key frame="63" value="3.22329" />
                    <Key frame="97" value="3.40878" />
                    <Key frame="118" value="4.50378" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="2" value="5.85697" />
                    <Key frame="15" value="1.24001" />
                    <Key frame="18" value="1.24001" />
                    <Key frame="23" value="5.33479" />
                    <Key frame="31" value="5.86498" />
                    <Key frame="39" value="5.33479" />
                    <Key frame="47" value="5.86498" />
                    <Key frame="55" value="5.33479" />
                    <Key frame="63" value="5.86498" />
                    <Key frame="97" value="5.93939" />
                    <Key frame="118" value="6.22525" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="2" value="24.5327" />
                    <Key frame="15" value="80.5025" />
                    <Key frame="18" value="80.5025" />
                    <Key frame="23" value="82.2" />
                    <Key frame="31" value="81.6231" />
                    <Key frame="39" value="81.6231" />
                    <Key frame="47" value="81.6948" />
                    <Key frame="55" value="81.6948" />
                    <Key frame="63" value="81.6948" />
                    <Key frame="97" value="79.4366" />
                    <Key frame="118" value="24.122" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="2" value="69.1658" />
                    <Key frame="15" value="64.6495" />
                    <Key frame="18" value="64.6495" />
                    <Key frame="23" value="52.5" />
                    <Key frame="31" value="54.9131" />
                    <Key frame="39" value="53.2536" />
                    <Key frame="47" value="53.0429" />
                    <Key frame="55" value="53.0456" />
                    <Key frame="63" value="52.6293" />
                    <Key frame="97" value="117.762" />
                    <Key frame="118" value="68.3491" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="2" value="0.293073" />
                    <Key frame="15" value="0.268159" />
                    <Key frame="18" value="0.268159" />
                    <Key frame="23" value="0.02" />
                    <Key frame="31" value="0.0103412" />
                    <Key frame="39" value="0.0103412" />
                    <Key frame="47" value="0.0103412" />
                    <Key frame="55" value="0.0103412" />
                    <Key frame="63" value="0.0103412" />
                    <Key frame="97" value="0.0181333" />
                    <Key frame="118" value="0.297914" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="2" value="6.45776" />
                    <Key frame="15" value="-25.0633" />
                    <Key frame="18" value="-25.0633" />
                    <Key frame="23" value="4.56296" />
                    <Key frame="31" value="8.93827" />
                    <Key frame="39" value="4.56296" />
                    <Key frame="47" value="8.93827" />
                    <Key frame="55" value="4.56296" />
                    <Key frame="63" value="8.93827" />
                    <Key frame="97" value="5.15223" />
                    <Key frame="118" value="6.76085" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="2" value="-5.97001" />
                    <Key frame="15" value="-1.262" />
                    <Key frame="18" value="-1.262" />
                    <Key frame="23" value="-4.85347" />
                    <Key frame="31" value="-4.86226" />
                    <Key frame="39" value="-4.85347" />
                    <Key frame="47" value="-4.86226" />
                    <Key frame="55" value="-4.85347" />
                    <Key frame="63" value="-4.86226" />
                    <Key frame="97" value="-5.4679" />
                    <Key frame="118" value="-6.32733" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="2" value="-9.64272" />
                    <Key frame="15" value="-0.708047" />
                    <Key frame="18" value="-0.708047" />
                    <Key frame="23" value="-9.49937" />
                    <Key frame="31" value="-9.39659" />
                    <Key frame="39" value="-9.49937" />
                    <Key frame="47" value="-9.39659" />
                    <Key frame="55" value="-9.49937" />
                    <Key frame="63" value="-9.39659" />
                    <Key frame="97" value="-9.47662" />
                    <Key frame="118" value="-9.9404" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="2" value="-4.52603" />
                    <Key frame="15" value="38.9851" />
                    <Key frame="18" value="38.9851" />
                    <Key frame="23" value="-2.0568" />
                    <Key frame="31" value="-2.0568" />
                    <Key frame="39" value="-2.0568" />
                    <Key frame="47" value="-2.0568" />
                    <Key frame="55" value="-2.0568" />
                    <Key frame="63" value="-2.0568" />
                    <Key frame="97" value="-2.55223" />
                    <Key frame="118" value="-4.99935" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="2" value="81.2741" />
                    <Key frame="15" value="-18.7338" />
                    <Key frame="18" value="-18.7338" />
                    <Key frame="23" value="57.1484" />
                    <Key frame="31" value="62.0959" />
                    <Key frame="39" value="57.7062" />
                    <Key frame="47" value="62.0357" />
                    <Key frame="55" value="57.2875" />
                    <Key frame="63" value="62.0437" />
                    <Key frame="97" value="75.1492" />
                    <Key frame="118" value="82.4145" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="2" value="-13.8082" />
                    <Key frame="15" value="-1.81935" />
                    <Key frame="18" value="-1.81935" />
                    <Key frame="23" value="-13.9" />
                    <Key frame="31" value="-18.1445" />
                    <Key frame="39" value="-18.9209" />
                    <Key frame="47" value="-22.476" />
                    <Key frame="55" value="-23.9758" />
                    <Key frame="63" value="-26.7795" />
                    <Key frame="97" value="-19.2977" />
                    <Key frame="118" value="-12.8194" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="2" value="5.93058" />
                    <Key frame="15" value="0.93" />
                    <Key frame="18" value="0.93" />
                    <Key frame="23" value="49.3" />
                    <Key frame="31" value="52.2094" />
                    <Key frame="39" value="50.0041" />
                    <Key frame="47" value="51.8942" />
                    <Key frame="55" value="49.4373" />
                    <Key frame="63" value="49.0926" />
                    <Key frame="97" value="55.5958" />
                    <Key frame="118" value="5.53421" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="210" y="219">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1.75" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
              <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
            </Box>
            <Box name="Play Sound" id="3" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="408" y="223">
              <bitmap>media/images/box/interaction/play_music.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
              <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../Dragon Ball Z - Sound Effects - Super Saiyan..mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
              <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
              <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
              <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
              <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                        <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                        <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                        <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                      </Box>
                      <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                        <bitmap>media/images/box/folder.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                        <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                      </Box>
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="Audio player" type="Lock" timeout="0" />
            </Box>
            <Box name="Eye LEDs" id="2" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="412" y="349">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
              <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                <Choice value="Both" />
                <Choice value="Left" />
                <Choice value="Right" />
              </Parameter>
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                      </Box>
                      <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 211, 26])]]>
                          </content>
                        </script>
                        <pluginContent>
                          <color>#ffd31a</color>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                        <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                      </Box>
                      <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                      <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Eye LEDs (1)" id="4" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="639" y="357">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
              <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                <Choice value="Both" />
                <Choice value="Left" />
                <Choice value="Right" />
              </Parameter>
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                      </Box>
                      <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 85, 0])]]>
                          </content>
                        </script>
                        <pluginContent>
                          <color>#ff5500</color>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                        <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                      </Box>
                      <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                      <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" />
            <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" />
            <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
            <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
